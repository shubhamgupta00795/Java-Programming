import java.util.*;

class frequency {
    public static void main(String[] args) {
        ArrayList<Integer> arr = new ArrayList<>();
        arr.add(888);
        arr.add(417);
        arr.add(136);
        arr.add(979);
        arr.add(360);
        arr.add(711);
        arr.add(569);
        arr.add(649);
        arr.add(693);
        arr.add(763);
        arr.add(586);
        arr.add(259);
        arr.add(715);
        arr.add(892);
        arr.add(366);
        arr.add(309);
        arr.add(170);
        arr.add(72);
        arr.add(992);
        arr.add(483);
        arr.add(245);
        arr.add(5);
        arr.add(421);
        arr.add(66);
        arr.add(466);
        arr.add(368);
        arr.add(109);
        arr.add(774);
        arr.add(716);
        arr.add(89);
        arr.add(630);
        arr.add(154);
        arr.add(68);
        arr.add(749);
        arr.add(857);
        arr.add(699);
        arr.add(68);
        arr.add(539);
        arr.add(467);
        arr.add(69);
        arr.add(531);
        arr.add(888);
        arr.add(46);
        arr.add(364);
        arr.add(700);
        arr.add(827);
        arr.add(181);
        arr.add(44);
        arr.add(470);
        arr.add(145);
        arr.add(859);
        arr.add(819);
        arr.add(245);
        arr.add(618);
        arr.add(957);
        arr.add(737);
        arr.add(232);
        arr.add(394);
        arr.add(435);
        arr.add(447);
        arr.add(729);
        arr.add(209);
        arr.add(291);
        arr.add(117);
        arr.add(824);
        arr.add(939);
        arr.add(646);
        arr.add(242);
        arr.add(936);
        arr.add(145);
        arr.add(369);
        arr.add(799);
        arr.add(593);
        arr.add(583);
        arr.add(142);
        arr.add(660);
        arr.add(156);
        arr.add(84);
        arr.add(776);
        arr.add(866);
        arr.add(482);
        arr.add(229);
        arr.add(722);
        arr.add(848);
        arr.add(838);
        arr.add(809);
        arr.add(241);
        arr.add(559);
        arr.add(342);
        arr.add(830);
        arr.add(173);
        arr.add(910);
        arr.add(158);
        arr.add(251);
        arr.add(829);
        arr.add(422);
        arr.add(268);
        arr.add(148);
        arr.add(616);
        arr.add(998);
        arr.add(949);
        arr.add(770);
        arr.add(284);
        arr.add(760);
        arr.add(135);
        arr.add(608);
        arr.add(722);
        arr.add(506);
        arr.add(685);
        arr.add(359);
        arr.add(992);
        arr.add(95);
        arr.add(927);
        arr.add(882);
        arr.add(470);
        arr.add(60);
        arr.add(71);
        arr.add(99);
        arr.add(354);
        arr.add(851);
        arr.add(124);
        arr.add(100);
        arr.add(348);
        arr.add(187);
        arr.add(467);
        arr.add(775);
        arr.add(378);
        arr.add(237);
        arr.add(193);
        arr.add(903);
        arr.add(685);
        arr.add(785);
        arr.add(378);
        arr.add(261);
        arr.add(362);
        arr.add(463);
        arr.add(389);
        arr.add(420);
        arr.add(59);
        arr.add(95);
        arr.add(510);
        arr.add(628);
        arr.add(99);
        arr.add(89);
        arr.add(315);
        arr.add(611);
        arr.add(118);
        arr.add(494);
        arr.add(632);
        arr.add(663);
        arr.add(366);
        arr.add(389);
        arr.add(555);
        arr.add(965);
        arr.add(183);
        arr.add(294);
        arr.add(328);
        arr.add(262);
        arr.add(12);
        arr.add(99);
        arr.add(182);
        arr.add(908);
        arr.add(167);
        arr.add(98);
        arr.add(15);
        arr.add(370);
        arr.add(693);
        arr.add(661);
        arr.add(956);
        arr.add(649);
        arr.add(784);
        arr.add(281);
        arr.add(911);
        arr.add(740);
        arr.add(379);
        arr.add(962);
        arr.add(504);
        arr.add(61);
        arr.add(154);
        arr.add(654);
        arr.add(841);
        arr.add(245);
        arr.add(383);
        arr.add(278);
        arr.add(194);
        arr.add(888);
        arr.add(102);
        arr.add(552);
        arr.add(493);
        arr.add(758);
        arr.add(442);
        arr.add(127);
        arr.add(866);
        arr.add(204);
        arr.add(989);
        arr.add(57);
        arr.add(637);
        arr.add(353);
        arr.add(860);
        arr.add(896);
        arr.add(531);
        arr.add(433);
        arr.add(209);
        arr.add(314);
        arr.add(753);
        arr.add(86);
        arr.add(240);
        arr.add(625);
        arr.add(365);
        arr.add(66);
        arr.add(506);
        arr.add(732);
        arr.add(435);
        arr.add(205);
        arr.add(653);
        arr.add(764);
        arr.add(241);
        arr.add(813);
        arr.add(121);
        arr.add(872);
        arr.add(627);
        arr.add(313);
        arr.add(396);
        arr.add(385);
        arr.add(992);
        arr.add(534);
        arr.add(344);
        arr.add(503);
        arr.add(587);
        arr.add(298);
        arr.add(976);
        arr.add(298);
        arr.add(715);
        arr.add(540);
        arr.add(222);
        arr.add(593);
        arr.add(675);
        arr.add(290);
        arr.add(40);
        arr.add(879);
        arr.add(426);
        arr.add(560);
        arr.add(718);
        arr.add(137);
        arr.add(573);
        arr.add(360);
        arr.add(414);
        arr.add(537);
        arr.add(944);
        arr.add(413);
        arr.add(801);
        arr.add(238);
        arr.add(33);
        arr.add(831);
        arr.add(779);
        arr.add(66);
        arr.add(781);
        arr.add(890);
        arr.add(454);
        arr.add(258);
        arr.add(753);
        arr.add(502);
        arr.add(871);
        arr.add(602);
        arr.add(810);
        arr.add(952);
        arr.add(776);
        arr.add(847);
        arr.add(197);
        arr.add(600);
        arr.add(349);
        arr.add(946);
        arr.add(616);
        arr.add(554);
        arr.add(823);
        arr.add(612);
        arr.add(655);
        HashMap<Integer,Integer> map= new HashMap<>();
        for(int i=0;i<arr.size();i++){
            if(map.containsKey(arr.get(i))){
                int value=map.get(arr.get(i));
                value++;
                map.put(arr.get(i),value);
            }else{
                map.put(arr.get(i),1);
            }
        }
        int count=0;
        for(Map.Entry<Integer,Integer> e: map.entrySet()){
            if(e.getValue()==1){
                count++;
            }
        }
        System.out.print(count);
    }
}